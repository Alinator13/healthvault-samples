//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthVaultProxyTest.HVConnect {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectRequest", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class ConnectRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalPersonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalRecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecretAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecretQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalPersonName {
            get {
                return this.LocalPersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalPersonNameField, value) != true)) {
                    this.LocalPersonNameField = value;
                    this.RaisePropertyChanged("LocalPersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalRecordId {
            get {
                return this.LocalRecordIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalRecordIdField, value) != true)) {
                    this.LocalRecordIdField = value;
                    this.RaisePropertyChanged("LocalRecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecretAnswer {
            get {
                return this.SecretAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.SecretAnswerField, value) != true)) {
                    this.SecretAnswerField = value;
                    this.RaisePropertyChanged("SecretAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecretQuestion {
            get {
                return this.SecretQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.SecretQuestionField, value) != true)) {
                    this.SecretQuestionField = value;
                    this.RaisePropertyChanged("SecretQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HVProxyResponse", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HealthVaultProxyTest.HVConnect.ValidatedConnectionsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HealthVaultProxyTest.HVConnect.DeletePendingConnectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HealthVaultProxyTest.HVConnect.RevokeApplicationConnectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HealthVaultProxyTest.HVConnect.ConnectResponse))]
    public partial class HVProxyResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stack {
            get {
                return this.StackField;
            }
            set {
                if ((object.ReferenceEquals(this.StackField, value) != true)) {
                    this.StackField = value;
                    this.RaisePropertyChanged("Stack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidatedConnectionsResponse", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class ValidatedConnectionsResponse : HealthVaultProxyTest.HVConnect.HVProxyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HealthVaultProxyTest.HVConnect.ValidatedConnection[] ConnectionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HealthVaultProxyTest.HVConnect.ValidatedConnection[] Connections {
            get {
                return this.ConnectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionsField, value) != true)) {
                    this.ConnectionsField = value;
                    this.RaisePropertyChanged("Connections");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeletePendingConnectionResponse", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class DeletePendingConnectionResponse : HealthVaultProxyTest.HVConnect.HVProxyResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RevokeApplicationConnectionResponse", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class RevokeApplicationConnectionResponse : HealthVaultProxyTest.HVConnect.HVProxyResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectResponse", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class ConnectResponse : HealthVaultProxyTest.HVConnect.HVProxyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PickupUrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionCode {
            get {
                return this.ConnectionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionCodeField, value) != true)) {
                    this.ConnectionCodeField = value;
                    this.RaisePropertyChanged("ConnectionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PickupUrl {
            get {
                return this.PickupUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PickupUrlField, value) != true)) {
                    this.PickupUrlField = value;
                    this.RaisePropertyChanged("PickupUrl");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidatedConnection", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class ValidatedConnection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationPatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationSpecificRecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecordIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationPatientId {
            get {
                return this.ApplicationPatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationPatientIdField, value) != true)) {
                    this.ApplicationPatientIdField = value;
                    this.RaisePropertyChanged("ApplicationPatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationSpecificRecordId {
            get {
                return this.ApplicationSpecificRecordIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationSpecificRecordIdField, value) != true)) {
                    this.ApplicationSpecificRecordIdField = value;
                    this.RaisePropertyChanged("ApplicationSpecificRecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidatedConnectionsRequest", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class ValidatedConnectionsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SinceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SinceDate {
            get {
                return this.SinceDateField;
            }
            set {
                if ((this.SinceDateField.Equals(value) != true)) {
                    this.SinceDateField = value;
                    this.RaisePropertyChanged("SinceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeletePendingConnectionRequest", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class DeletePendingConnectionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalRecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalRecordId {
            get {
                return this.LocalRecordIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalRecordIdField, value) != true)) {
                    this.LocalRecordIdField = value;
                    this.RaisePropertyChanged("LocalRecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RevokeApplicationConnectionRequest", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class RevokeApplicationConnectionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HVConnect.IHVConnect")]
    public interface IHVConnect {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVConnect/CreateConnection", ReplyAction="http://tempuri.org/IHVConnect/CreateConnectionResponse")]
        HealthVaultProxyTest.HVConnect.ConnectResponse CreateConnection(HealthVaultProxyTest.HVConnect.ConnectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVConnect/CreateConnection", ReplyAction="http://tempuri.org/IHVConnect/CreateConnectionResponse")]
        System.Threading.Tasks.Task<HealthVaultProxyTest.HVConnect.ConnectResponse> CreateConnectionAsync(HealthVaultProxyTest.HVConnect.ConnectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVConnect/GetValidatedConnections", ReplyAction="http://tempuri.org/IHVConnect/GetValidatedConnectionsResponse")]
        HealthVaultProxyTest.HVConnect.ValidatedConnectionsResponse GetValidatedConnections(HealthVaultProxyTest.HVConnect.ValidatedConnectionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVConnect/GetValidatedConnections", ReplyAction="http://tempuri.org/IHVConnect/GetValidatedConnectionsResponse")]
        System.Threading.Tasks.Task<HealthVaultProxyTest.HVConnect.ValidatedConnectionsResponse> GetValidatedConnectionsAsync(HealthVaultProxyTest.HVConnect.ValidatedConnectionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVConnect/DeletePendingConnection", ReplyAction="http://tempuri.org/IHVConnect/DeletePendingConnectionResponse")]
        HealthVaultProxyTest.HVConnect.DeletePendingConnectionResponse DeletePendingConnection(HealthVaultProxyTest.HVConnect.DeletePendingConnectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVConnect/DeletePendingConnection", ReplyAction="http://tempuri.org/IHVConnect/DeletePendingConnectionResponse")]
        System.Threading.Tasks.Task<HealthVaultProxyTest.HVConnect.DeletePendingConnectionResponse> DeletePendingConnectionAsync(HealthVaultProxyTest.HVConnect.DeletePendingConnectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVConnect/RevokeApplicationConnection", ReplyAction="http://tempuri.org/IHVConnect/RevokeApplicationConnectionResponse")]
        HealthVaultProxyTest.HVConnect.RevokeApplicationConnectionResponse RevokeApplicationConnection(HealthVaultProxyTest.HVConnect.RevokeApplicationConnectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVConnect/RevokeApplicationConnection", ReplyAction="http://tempuri.org/IHVConnect/RevokeApplicationConnectionResponse")]
        System.Threading.Tasks.Task<HealthVaultProxyTest.HVConnect.RevokeApplicationConnectionResponse> RevokeApplicationConnectionAsync(HealthVaultProxyTest.HVConnect.RevokeApplicationConnectionRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHVConnectChannel : HealthVaultProxyTest.HVConnect.IHVConnect, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HVConnectClient : System.ServiceModel.ClientBase<HealthVaultProxyTest.HVConnect.IHVConnect>, HealthVaultProxyTest.HVConnect.IHVConnect {
        
        public HVConnectClient() {
        }
        
        public HVConnectClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HVConnectClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HVConnectClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HVConnectClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HealthVaultProxyTest.HVConnect.ConnectResponse CreateConnection(HealthVaultProxyTest.HVConnect.ConnectRequest request) {
            return base.Channel.CreateConnection(request);
        }
        
        public System.Threading.Tasks.Task<HealthVaultProxyTest.HVConnect.ConnectResponse> CreateConnectionAsync(HealthVaultProxyTest.HVConnect.ConnectRequest request) {
            return base.Channel.CreateConnectionAsync(request);
        }
        
        public HealthVaultProxyTest.HVConnect.ValidatedConnectionsResponse GetValidatedConnections(HealthVaultProxyTest.HVConnect.ValidatedConnectionsRequest request) {
            return base.Channel.GetValidatedConnections(request);
        }
        
        public System.Threading.Tasks.Task<HealthVaultProxyTest.HVConnect.ValidatedConnectionsResponse> GetValidatedConnectionsAsync(HealthVaultProxyTest.HVConnect.ValidatedConnectionsRequest request) {
            return base.Channel.GetValidatedConnectionsAsync(request);
        }
        
        public HealthVaultProxyTest.HVConnect.DeletePendingConnectionResponse DeletePendingConnection(HealthVaultProxyTest.HVConnect.DeletePendingConnectionRequest request) {
            return base.Channel.DeletePendingConnection(request);
        }
        
        public System.Threading.Tasks.Task<HealthVaultProxyTest.HVConnect.DeletePendingConnectionResponse> DeletePendingConnectionAsync(HealthVaultProxyTest.HVConnect.DeletePendingConnectionRequest request) {
            return base.Channel.DeletePendingConnectionAsync(request);
        }
        
        public HealthVaultProxyTest.HVConnect.RevokeApplicationConnectionResponse RevokeApplicationConnection(HealthVaultProxyTest.HVConnect.RevokeApplicationConnectionRequest request) {
            return base.Channel.RevokeApplicationConnection(request);
        }
        
        public System.Threading.Tasks.Task<HealthVaultProxyTest.HVConnect.RevokeApplicationConnectionResponse> RevokeApplicationConnectionAsync(HealthVaultProxyTest.HVConnect.RevokeApplicationConnectionRequest request) {
            return base.Channel.RevokeApplicationConnectionAsync(request);
        }
    }
}
